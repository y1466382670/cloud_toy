###################################
#服务启动端口的配置
###################################
server:
  port: 8000

###############################################################
# eureka 的相关配置
# 如果不需要 结合eureka 使用，可以不要这一段配置
###############################################################
eureka:
  client:
    service-url:
      defaultZone: http://123.56.60.46:1001/eureka/
#      defaultZone: http://123.56.60.46:1001/eureka/,http://123.56.60.46:1002/eureka/,http://123.56.60.46:1003/eureka/
  instance:
    prefer-ip-address: true
    instance-id: gateway-1
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: gateway-service
  zipkin:
    base-url: http://123.56.60.46:9411
  cloud:
    #################################
    #   gateway相关配置
    #################################
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            #这里有个allowCredentials: true这个东西是设置允许访问携带cookie的，这点一定要和前端对应！
            #allowCredentials: true
            #可以填写多个域名用","隔开 例如："http://www.xiaolc.cn,https://spring.io"  "*"代表允许所有
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      #    路由定义
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product/**
          filters:
            - StripPrefix=1
  datasource:
    #type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://123.56.60.46:3306/toys_copy?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: 'P@ssw0rd'
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 10
    maxActive: 1000
    #配置获取连接等待超时的时间
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #验证连接是否有效。此参数必须设置为非空字符串，下面三项设置成true才能生效
    validationQuery: SELECT 1
    #指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
    testWhileIdle: true
    #指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
    testOnBorrow: true
    #指明是否在归还到池中前进行检验
    testOnReturn: false
    #打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    #通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000;druid.stat.logSlowSql=true
    #合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    filter:
      stat:
        log-slow-sql: true
        slow-sql-millis: 1000
        merge-sql: false
      wall:
        config:
          multi-statement-allow: true
  redis:
    database: 0
    host: 123.56.60.46
    port: 6379
    password: yzy123456
    min-idle: 0
    lettuce:
      shutdown-timeout: 100ms

mybatis:
  type-aliases-package: com.yu.dao
  mapper-locations: classpath:mapper/*.xml

security:
  loginAfterTime: 5 #错误超过次数后多少分钟后才能继续登录（分钟）
  loginTimeLimit: 5 #限制用户登陆错误次数（次）

# 配置Gateway日志等级，输出转发细节信息
logging:
  level:
    org.springframework.cloud.gateway: debug

#开启熔断器
feign:
  hystrix:
    enabled: true
